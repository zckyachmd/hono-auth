// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(128)
  email     String   @unique @db.VarChar(128)
  username  String   @unique @db.VarChar(32)
  password  String
  roleId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role   Role        @relation(fields: [roleId], references: [id])
  tokens UserToken[] @relation("UserTokens")

  @@index([roleId])
  @@map("users")
}

model Role {
  id        String   @id @default(cuid())
  name      String   @unique @db.VarChar(64)
  parentId  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  parent   Role?  @relation("RoleHierarchy", fields: [parentId], references: [id])
  children Role[] @relation("RoleHierarchy")
  users    User[]

  @@map("roles")
}

model UserToken {
  id        String   @id @default(cuid())
  userId    String
  token     String
  issuedAt  DateTime @default(now())
  expiresAt DateTime
  revoked   Boolean  @default(false)

  user User @relation("UserTokens", fields: [userId], references: [id])

  @@index([userId, token])
  @@map("user_tokens")
}
